include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    no_logic_in_create_state: ignore
    always_put_control_body_on_new_line: ignore
    avoid_classes_with_only_static_members: ignore
    sort_pub_dependencies: ignore
    prefer_relative_imports: ignore
    prefer_final_parameters: ignore
    omit_local_variable_types: ignore
    public_member_api_docs: ignore
    sort_constructors_first: ignore
    prefer_expression_function_bodies: ignore
    prefer_mixin: ignore
    library_private_types_in_public_api: ignore
    diagnostic_describe_all_properties: ignore
    always_declare_return_types: error
    always_put_required_named_parameters_first: error
    always_require_non_null_named_parameters: error
    always_use_package_imports: error
    annotate_overrides: error
    avoid_annotating_with_dynamic: error
    avoid_bool_literals_in_conditional_expressions: error
    avoid_catches_without_on_clauses: error
    avoid_catching_errors: error
    avoid_double_and_int_checks: error
    avoid_dynamic_calls: error
    avoid_empty_else: error
    avoid_equals_and_hash_code_on_mutable_classes: error
    avoid_escaping_inner_quotes: error
    avoid_field_initializers_in_const_classes: error
    avoid_function_literals_in_foreach_calls: error
    avoid_implementing_value_types: error
    avoid_init_to_null: error
    avoid_js_rounded_ints: error
    avoid_multiple_declarations_per_line: error
    avoid_null_checks_in_equality_operators: error
    avoid_positional_boolean_parameters: error
    avoid_print: error
    avoid_private_typedef_functions: error
    avoid_redundant_argument_values: error
    avoid_relative_lib_imports: error
    avoid_renaming_method_parameters: error
    avoid_return_types_on_setters: error
    avoid_returning_null: error
    avoid_returning_null_for_future: error
    avoid_returning_null_for_void: error
    avoid_returning_this: error
    avoid_setters_without_getters: error
    avoid_shadowing_type_parameters: error
    avoid_single_cascade_in_expression_statements: error
    avoid_slow_async_io: error
    avoid_type_to_string: error
    avoid_types_as_parameter_names: error
    avoid_types_on_closure_parameters: error
    avoid_unnecessary_containers: error
    avoid_unused_constructor_parameters: error
    avoid_void_async: error
    avoid_web_libraries_in_flutter: error
    await_only_futures: error
    camel_case_extensions: error
    camel_case_types: error
    cancel_subscriptions: error
    cascade_invocations: error
    cast_nullable_to_non_nullable: error
    close_sinks: error
    comment_references: error
    constant_identifier_names: error
    control_flow_in_finally: error
    curly_braces_in_flow_control_structures: error
    depend_on_referenced_packages: error
    deprecated_consistency: error
    directives_ordering: error
    do_not_use_environment: error
    empty_catches: error
    empty_constructor_bodies: error
    empty_statements: error
    eol_at_end_of_file: error
    exhaustive_cases: error
    file_names: error
    flutter_style_todos: error
    hash_and_equals: error
    implementation_imports: error
    invariant_booleans: error
    iterable_contains_unrelated_type: error
    join_return_with_assignment: error
    leading_newlines_in_multiline_strings: error
    library_names: error
    library_prefixes: error
    lines_longer_than_80_chars: error
    list_remove_unrelated_type: error
    literal_only_boolean_expressions: error
    missing_whitespace_between_adjacent_strings: error
    no_adjacent_strings_in_list: error
    no_default_cases: error
    no_duplicate_case_values: error
    no_runtimeType_toString: error
    non_constant_identifier_names: error
    noop_primitive_operations: error
    null_check_on_nullable_type_parameter: error
    null_closures: error
    one_member_abstracts: error
    only_throw_errors: error
    overridden_fields: error
    package_api_docs: error
    package_names: error
    package_prefixed_library_names: error
    parameter_assignments: error
    prefer_adjacent_string_concatenation: error
    prefer_asserts_in_initializer_lists: error
    prefer_asserts_with_message: error
    prefer_collection_literals: error
    prefer_conditional_assignment: error
    prefer_const_constructors: error
    prefer_const_constructors_in_immutables: error
    prefer_const_declarations: error
    prefer_const_literals_to_create_immutables: error
    prefer_constructors_over_static_methods: error
    prefer_contains: error
    prefer_equal_for_default_values: error
    prefer_final_fields: error
    prefer_final_in_for_each: error
    prefer_final_locals: error
    prefer_for_elements_to_map_fromIterable: error
    prefer_foreach: error
    prefer_function_declarations_over_variables: error
    prefer_generic_function_type_aliases: error
    prefer_if_elements_to_conditional_expressions: error
    prefer_if_null_operators: error
    prefer_initializing_formals: error
    prefer_inlined_adds: error
    prefer_int_literals: error
    prefer_interpolation_to_compose_strings: error
    prefer_is_empty: error
    prefer_is_not_empty: error
    prefer_is_not_operator: error
    prefer_iterable_whereType: error
    prefer_null_aware_method_calls: error
    prefer_null_aware_operators: error
    prefer_single_quotes: error
    prefer_spread_collections: error
    prefer_typing_uninitialized_variables: error
    prefer_void_to_null: error
    provide_deprecation_message: error
    recursive_getters: error
    require_trailing_commas: error
    sized_box_for_whitespace: error
    slash_for_doc_comments: error
    sort_child_properties_last: error
    sort_unnamed_constructors_first: error
    test_types_in_equals: error
    throw_in_finally: error
    tighten_type_of_initializing_formals: error
    type_annotate_public_apis: error
    type_init_formals: error
    unawaited_futures: error
    unnecessary_await_in_return: error
    unnecessary_brace_in_string_interps: error
    unnecessary_const: error
    unnecessary_constructor_name: error
    unnecessary_getters_setters: error
    unnecessary_lambdas: error
    unnecessary_new: error
    unnecessary_null_aware_assignments: error
    unnecessary_null_checks: error
    unnecessary_null_in_if_null_operators: error
    unnecessary_nullable_for_final_variable_declarations: error
    unnecessary_overrides: error
    unnecessary_parenthesis: error
    unnecessary_raw_strings: error
    unnecessary_statements: error
    unnecessary_string_escapes: error
    unnecessary_string_interpolations: error
    unnecessary_this: error
    unrelated_type_equality_checks: error
    unsafe_html: error
    use_build_context_synchronously: error
    use_full_hex_values_for_flutter_colors: error
    use_function_type_syntax_for_parameters: error
    use_if_null_to_convert_nulls_to_bools: error
    use_is_even_rather_than_modulo: error
    use_key_in_widget_constructors: error
    use_late_for_private_fields_and_variables: error
    use_named_constants: error
    use_raw_strings: error
    use_rethrow_when_possible: error
    use_setters_to_change_properties: error
    use_string_buffers: error
    use_test_throws_matchers: error
    use_to_and_as_if_applicable: error
    valid_regexps: error
    void_checks: error

linter:
  rules:
    # these rules are documented on and in the same order as
    # the Dart Lint rules page to make maintenance easier
    # https://github.com/dart-lang/linter/blob/master/example/all.yaml
    # - always_declare_return_types
    # - always_put_control_body_on_new_line
    # # - always_put_required_named_parameters_first # we prefer having parameters in the same order as fields https://github.com/flutter/flutter/issues/10219
    # # - always_require_non_null_named_parameters # DIFFERENT FROM FLUTTER/FLUTTER
    # - always_specify_types
    # # - always_use_package_imports # we do this commonly
    # - annotate_overrides
    # # - avoid_annotating_with_dynamic # conflicts with always_specify_types
    # - avoid_bool_literals_in_conditional_expressions
    # # - avoid_catches_without_on_clauses # we do this commonly
    # # - avoid_catching_errors # we do this commonly
    # - avoid_classes_with_only_static_members # We want to avoid classes that can be instantiated but only have statics
    # # - avoid_double_and_int_checks # only useful when targeting JS runtime
    # # - avoid_dynamic_calls # not yet tested
    # - avoid_empty_else
    # # - avoid_equals_and_hash_code_on_mutable_classes # DIFFERENT FROM FLUTTER/FLUTTER
    # # - avoid_escaping_inner_quotes # not yet tested
    # - avoid_field_initializers_in_const_classes
    # - avoid_function_literals_in_foreach_calls
    # # - avoid_implementing_value_types # not yet tested
    # - avoid_init_to_null
    # # - avoid_js_rounded_ints # only useful when targeting JS runtime
    # - avoid_null_checks_in_equality_operators
    # # - avoid_positional_boolean_parameters # not yet tested
    # # - avoid_print # not yet tested
    # # - avoid_private_typedef_functions # we prefer having typedef (discussion in https://github.com/flutter/flutter/pull/16356)
    # # - avoid_redundant_argument_values # not yet tested
    # - avoid_relative_lib_imports
    # - avoid_renaming_method_parameters
    # - avoid_return_types_on_setters
    # # - avoid_returning_null # there are plenty of valid reasons to return null
    # # - avoid_returning_null_for_future # not yet tested
    # - avoid_returning_null_for_void
    # # - avoid_returning_this # there are plenty of valid reasons to return this
    # # - avoid_setters_without_getters # not yet tested
    # - avoid_shadowing_type_parameters
    # - avoid_single_cascade_in_expression_statements
    # - avoid_slow_async_io
    # - avoid_type_to_string
    # - avoid_types_as_parameter_names
    # # - avoid_types_on_closure_parameters # conflicts with always_specify_types
    # - avoid_unnecessary_containers
    # - avoid_unused_constructor_parameters
    # - avoid_void_async
    # # - avoid_web_libraries_in_flutter # not yet tested
    # - await_only_futures
    # - camel_case_extensions
    # - camel_case_types
    # - cancel_subscriptions
    # # - cascade_invocations # not yet tested
    # - cast_nullable_to_non_nullable
    # - close_sinks # not reliable enough
    # - comment_references # blocked on https://github.com/dart-lang/linter/issues/1142
    # - constant_identifier_names # needs an opt-out https://github.com/dart-lang/linter/issues/204
    # - control_flow_in_finally
    # # - curly_braces_in_flow_control_structures # not required by flutter style
    # - deprecated_consistency
    # # - diagnostic_describe_all_properties # not yet tested
    # - directives_ordering
    # # - do_not_use_environment # we do this commonly
    # - empty_catches
    # - empty_constructor_bodies
    # - empty_statements
    # - exhaustive_cases
    # - file_names
    # - flutter_style_todos
    # - hash_and_equals
    # - implementation_imports
    # # - invariant_booleans # too many false positives: https://github.com/dart-lang/linter/issues/811
    # - iterable_contains_unrelated_type
    # # - join_return_with_assignment # not required by flutter style
    # - leading_newlines_in_multiline_strings
    # - library_names
    # - library_prefixes
    # # - lines_longer_than_80_chars # not required by flutter style
    # - list_remove_unrelated_type
    # # - literal_only_boolean_expressions # too many false positives: https://github.com/dart-lang/sdk/issues/34181
    # # - missing_whitespace_between_adjacent_strings # DIFFERENT FROM FLUTTER/FLUTTER
    # - no_adjacent_strings_in_list
    # # - no_default_cases # too many false positives
    # - no_duplicate_case_values
    # - no_logic_in_create_state
    # # - no_runtimeType_toString # ok in tests; we enable this only in packages/
    # - non_constant_identifier_names
    # - null_check_on_nullable_type_parameter
    # - null_closures
    # # - omit_local_variable_types # opposite of always_specify_types
    # # - one_member_abstracts # too many false positives
    # # - only_throw_errors # https://github.com/flutter/flutter/issues/5792
    # - overridden_fields
    # - package_api_docs
    # - package_names
    # - package_prefixed_library_names
    # # - parameter_assignments # we do this commonly
    # - prefer_adjacent_string_concatenation
    # - prefer_asserts_in_initializer_lists
    # # - prefer_asserts_with_message # not required by flutter style
    # - prefer_collection_literals
    # - prefer_conditional_assignment
    # - prefer_const_constructors
    # - prefer_const_constructors_in_immutables
    # - prefer_const_declarations
    # - prefer_const_literals_to_create_immutables
    # # - prefer_constructors_over_static_methods # far too many false positives
    # - prefer_contains
    # # - prefer_double_quotes # opposite of prefer_single_quotes
    # - prefer_equal_for_default_values
    # # - prefer_expression_function_bodies # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods
    # # - prefer_final_fields # DIFFERENT FROM FLUTTER/FLUTTER
    # - prefer_final_in_for_each
    # - prefer_final_locals
    # - prefer_for_elements_to_map_fromIterable
    # - prefer_foreach
    # - prefer_function_declarations_over_variables
    # - prefer_generic_function_type_aliases
    # - prefer_if_elements_to_conditional_expressions
    # - prefer_if_null_operators
    # - prefer_initializing_formals
    # - prefer_inlined_adds
    # # - prefer_int_literals # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#use-double-literals-for-double-constants
    # # - prefer_interpolation_to_compose_strings # doesn't work with raw strings, see https://github.com/dart-lang/linter/issues/2490
    # - prefer_is_empty
    # - prefer_is_not_empty
    # - prefer_is_not_operator
    # - prefer_iterable_whereType
    # # - prefer_mixin # https://github.com/dart-lang/language/issues/32
    # - prefer_null_aware_operators
    # # - prefer_relative_imports # incompatible with sub-package imports
    # - prefer_single_quotes
    # - prefer_spread_collections
    # - prefer_typing_uninitialized_variables
    # - prefer_void_to_null
    # - provide_deprecation_message
    # - public_member_api_docs # DIFFERENT FROM FLUTTER/FLUTTER
    # - recursive_getters
    # - sized_box_for_whitespace
    # - slash_for_doc_comments
    # # - sort_child_properties_last # not yet tested
    # # - sort_constructors_first # DIFFERENT FROM FLUTTER/FLUTTER
    # # - sort_pub_dependencies # prevents separating pinned transitive dependencies
    # - sort_unnamed_constructors_first
    # - test_types_in_equals
    # - throw_in_finally
    # - tighten_type_of_initializing_formals
    # # - type_annotate_public_apis # subset of always_specify_types
    # - type_init_formals
    # # - unawaited_futures # too many false positives
    # - unnecessary_await_in_return
    # - unnecessary_brace_in_string_interps
    # - unnecessary_const
    # # - unnecessary_final # conflicts with prefer_final_locals
    # - unnecessary_getters_setters
    # # - unnecessary_lambdas # has false positives: https://github.com/dart-lang/linter/issues/498
    # - unnecessary_new
    # - unnecessary_null_aware_assignments
    # # - unnecessary_null_checks # not yet tested
    # - unnecessary_null_in_if_null_operators
    # - unnecessary_nullable_for_final_variable_declarations
    # - unnecessary_overrides
    # - unnecessary_parenthesis
    # # - unnecessary_raw_strings # not yet tested
    # - unnecessary_statements
    # - unnecessary_string_escapes
    # - unnecessary_string_interpolations
    # - unnecessary_this
    # - unrelated_type_equality_checks
    # # - unsafe_html # not yet tested
    # - use_full_hex_values_for_flutter_colors
    # - use_function_type_syntax_for_parameters
    # # - use_if_null_to_convert_nulls_to_bools # not yet tested
    # - use_is_even_rather_than_modulo
    # - use_key_in_widget_constructors
    # # - use_late_for_private_fields_and_variables # not yet tested
    # # - use_named_constants # not yet tested
    # - use_raw_strings
    # - use_rethrow_when_possible
    # # - use_setters_to_change_properties # not yet tested
    # # - use_string_buffers # has false positives: https://github.com/dart-lang/sdk/issues/34182
    # # - use_to_and_as_if_applicable # has false positives, so we prefer to catch this by code-review
    # - valid_regexps
    # - void_checks
  